#QUESTION 1

import yfinance as yf
import pandas as pd

# Fetch Tesla stock data
tesla_stock = yf.Ticker("TSLA")

# Download historical stock data
tesla_data = tesla_stock.history(period="max")

# Display the downoaded data
tesla_data.head()


#QUESTION 2

import pandas as pd
import requests
from bs4 import BeautifulSoup

url = "https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-PY0220EN-SkillsNetwork/labs/project/revenue.htm"
html_data  = requests.get(url).text

soup = BeautifulSoup(html_data, "html.parser")

tesla_tables = soup.find_all('table')
 
for index,table in enumerate(tesla_tables):
    if ("Tesla Quarterly Revenue" in str(table)):
        tesla_table_index = index
 
tesla_revenue = pd.DataFrame(columns=["Date", "Revenue"])
 
for row in tesla_tables[tesla_table_index].tbody.find_all("tr"):
    col = row.find_all("td")
    if (col !=[]):
        date = col[0].text
        revenue = col[1].text.replace("$", "").replace(",", "")
        new_row = pd.DataFrame({"Date": [date], "Revenue": [revenue]})
        tesla_revenue = pd.concat([tesla_revenue, new_row], ignore_index=True)

tesla_revenue.head()



#QUESTION 5: Tesla Stock and Revenue Dashboard

import plotly.graph_objects as go
from plotly.subplots import make_subplots

def make_graph(tesla_data, tesla_revenue, 'Tesla'):
    fig = make_subplots(rows=2, cols=1, shared_xaxes=True, subplot_titles=("Historical Share Price", "Historical Revenue"), vertical_spacing = .3)
    tesla_data_specific = tesla_data[tela_data.Date <= '2021--06-14']
    tesla_revenue_specific = tesla_revenue[tesla_revenue.Date <= '2021-04-30']
    fig.add_trace(go.Scatter(x=pd.to_datetime(tesla_data_specific.Date), y=tesla_data_specific.Close.astype("float"), name="Share Price"), row=1, col=1)
    fig.add_trace(go.Scatter(x=pd.to_datetime(tesla_revenue_specific.Date), y=tesla_revenue_specific.Revenue.astype("float"), name="Revenue"), row=2, col=1)
    fig.update_xaxes(title_text="Date", row=1, col=1)
    fig.update_xaxes(title_text="Date", row=2, col=1)
    fig.update_yaxes(title_text="Price ($US)", row=1, col=1)
    fig.update_yaxes(title_text="Revenue ($US Millions)", row=2, col=1)
    fig.update_layout(showlegend=False,
    height=900,
    title=stock,
    xaxis_rangeslider_visible=True)
    fig.show()

#ERROR MESSAGE

---------------------------------------------------------------------------
Cell In[165], line 4
    def make_graph(tesla_data, tesla_revenue, 'Tesla'):
                                              ^
SyntaxError: invalid syntax

